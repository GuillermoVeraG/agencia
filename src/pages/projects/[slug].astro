---
import { getCollection } from "astro:content";
import Layout from "@/layouts/Layout.astro";
import { getDateText } from "@/utils/getDates";

export async function getStaticPaths() {
  const PROJECTS = await getCollection("projects");

  return PROJECTS.map(({ data }) => {
    return {
      params: { slug: data.slug },
      props: data,
    };
  });
}

const { img, title, desc, tags, client, pubDate, gallery, body } = Astro.props;

const textDate = getDateText(pubDate);
---

<Layout title={`Project - ${title}`}>
  <main class="w-full mt-40">
    <section class="w-full my-16">
      <div class="w-full max-w-7xl mx-auto overflow-hidden px-10 lg:px-[10%]">
        <div
          class="flex flex-col md:flex-row justify-center items-center gap-8"
        >
          <div
            class="w-full md:max-w-[70%] flex flex-col justify-center items-center md:items-start"
          >
            <h2
              class="uppercase text-6xl text-secondary-950 dark:text-secondary-50 text-center md:text-left"
            >
              {title}
            </h2>
            <p
              class="text-base font-light text-secondary-800/80 dark:text-secondary-200/80 mt-2"
            >
              {desc}
            </p>
          </div>
          <div
            class="w-full md:max-w-[30%] flex flex-col justify-center items-center md:items-start gap-4"
          >
            <div
              class="w-full max-w-60 flex justify-start items-center gap-4 border-b border-primary-600 dark:border-primary-300 pb-2"
            >
              <h5
                class="uppercase text-xs font-medium dark:font-light tracking-[6px] text-secondary-950 dark:text-secondary-50"
              >
                Client
              </h5>
              <h5
                class="uppercase text-xs font-light tracking-[6px] text-secondary-950 dark:text-secondary-50"
              >
                •
              </h5>
              <p
                class="text-base font-normal text-secondary-700 dark:text-secondary-300 capitalize"
              >
                {client}
              </p>
            </div>

            <div
              class="w-full max-w-60 flex justify-start items-center gap-4 border-b border-primary-600 dark:border-primary-300 pb-2"
            >
              <h5
                class="uppercase text-xs font-medium dark:font-light tracking-[6px] text-secondary-950 dark:text-secondary-50"
              >
                category
              </h5>
              <h5
                class="uppercase text-xs font-light tracking-[6px] text-secondary-950 dark:text-secondary-50"
              >
                •
              </h5>
              <p
                class="text-base font-normal text-secondary-700 dark:text-secondary-300 capitalize"
              >
                {tags[0]}
              </p>
            </div>

            <div
              class="w-full max-w-60 flex justify-start items-center gap-4 border-b border-primary-600 dark:border-primary-300 pb-2"
            >
              <h5
                class="uppercase text-xs font-medium dark:font-light tracking-[6px] text-secondary-950 dark:text-secondary-50"
              >
                date
              </h5>
              <h5
                class="uppercase text-xs font-light tracking-[6px] text-secondary-950 dark:text-secondary-50"
              >
                •
              </h5>
              <p
                class="text-base font-normal text-secondary-700 dark:text-secondary-300"
              >
                {textDate}
              </p>
            </div>
          </div>
        </div>
      </div>
      
      <img
        src={`${import.meta.env.BASE_URL}${img}`}
        alt="image project"
        class="w-full object-cover max-h-[540px] max-w-7xl mx-auto my-20 rounded-lg"
      />

      <div class="w-full max-w-7xl mx-auto overflow-hidden px-10 lg:px-[10%] flex flex-col justify-start items-center gap-8">
        {body.map(({ title, parrafo, border, list }) => 
            {
              const borderCls = border ? "border-l-4 border-primary-300 pl-2" : "";

              return (
              <div class={`flex flex-col gap-3 ${borderCls}`}>
                {title && (<h3 class="text-secondary-50 capitalize text-5xl font-medium"></h3class>{title}</h3>)}
                {parrafo.map((txt) => <p class="text-secondary-100/70 text-base">{txt}</p>)}
                {list && (
                  <ul class="pl-8 flex flex-col gap-4">
                    {list.map((txt) => <li class="text-secondary-100/70 text-base">• {txt}</li>)}
                  </ul>
                )}
              </div>);
            })}
      </div>

      <div class="w-full max-w-7xl mx-auto px-10 lg:px-[10%] flex flex-col md:flex-row justify-center items-center gap-4 mt-20">
        <img src={`${import.meta.env.BASE_URL}${gallery[0]}`} alt="" class="w-full md:w-3/4 h-full object-cover">
        <div class="flex flex-col gap-4 w-full md:w-1/4">
          {gallery.map((img, index) => {
            if(index > 0)
              return (<img src={`${import.meta.env.BASE_URL}${img}`} alt="" class="object-cover">);
          })}
        </div>        
      </div>
    </section>
  </main>
</Layout>
