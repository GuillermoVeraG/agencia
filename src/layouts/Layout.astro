---
import { ViewTransitions } from "astro:transitions";
import "@fontsource/inter/latin-100.css";
import "@fontsource/archivo/latin-300.css";
import "@fontsource/archivo/latin-400.css";
import "@fontsource/archivo/latin-500.css";
import "@fontsource/archivo/latin-700.css";
import Menu from "@/components/Menu.astro";
import Footer from "@/components/Footer.astro";

interface Props {
  title: string;
}

const { title } = Astro.props;
---

<!doctype html>
<html lang="en" class="dark">
  <head>
    <meta charset="UTF-8" />
    <meta name="description" content="Agency description" />
    <meta name="viewport" content="width=device-width" />
    <link
      rel="icon"
      type="image/svg+xml"
      href=`${import.meta.env.BASE_URL}/favicon.svg`
    />
    <title>{title}</title>
    <ViewTransitions />
  </head>
  <body
    class="bg-secondary-100 dark:bg-secondary-950 overflow-x-hidden w-screen"
  >
    <Menu />
    <slot />
    <Footer />
    <style is:global>
      html {
        font-family: "Archivo", sans-serif;
      }

      .dark #header-nav {
        animation: blurdark linear both;
        animation-timeline: scroll();
        animation-range: 0 500px;
      }

      @keyframes blurdark {
        to {
          background: rgba(29, 32, 37, 0.3);
        }
      }

      #header-nav {
        animation: blur linear both;
        animation-timeline: scroll();
        animation-range: 0 500px;
      }

      @keyframes blur {
        to {
          background: rgba(255, 255, 255, 0.3);
        }
      }
    </style>
    <script>
      console.log("DARK MODE THEME", localStorage.getItem("color-theme"));
      const themeToggleDarkIcon = document.getElementById(
        "theme-toggle-dark-icon"
      );
      const themeToggleLightIcon = document.getElementById(
        "theme-toggle-light-icon"
      );

      //if not localStorage found set by browser default
      if (!("color-theme" in localStorage)) {
        if (window.matchMedia("(prefers-color-scheme: dark)").matches) {
          localStorage.setItem("color-theme", "dark");
        } else {
          localStorage.setItem("color-theme", "light");
        }
      }

      // Change the icons inside the button based on previous settings
      if (localStorage.getItem("color-theme") === "light") {
        document.documentElement.classList.remove("dark");
        themeToggleDarkIcon?.classList.toggle("hidden");
      } else {
        document.documentElement.classList.add("dark");
        themeToggleLightIcon?.classList.toggle("hidden");
      }

      var themeToggleBtn = document.getElementById("theme-toggle");

      themeToggleBtn?.addEventListener("click", function () {
        // toggle icons inside button
        themeToggleDarkIcon?.classList.toggle("hidden");
        themeToggleLightIcon?.classList.toggle("hidden");

        // if set via local storage previously
        if (localStorage.getItem("color-theme")) {
          if (localStorage.getItem("color-theme") === "light") {
            document.documentElement.classList.add("dark");
            localStorage.setItem("color-theme", "dark");
          } else {
            document.documentElement.classList.remove("dark");
            localStorage.setItem("color-theme", "light");
          }
        }
      });
    </script>
  </body>
</html>
