---
import { getCollection } from "astro:content";
import type { CollectionEntry } from "astro:content";
import Title from "@/components/TitleVertical.astro";
import Item from "@/components/BlogItem.astro";

const BLOG_ITEMS: CollectionEntry<"blogs">[] = (
  await getCollection("blogs")
).sort(
  (a: CollectionEntry<"blogs">, b: CollectionEntry<"blogs">) =>
    b.data.pubDate.valueOf() - a.data.pubDate.valueOf()
);
---

<section class="my-16">
  <div class="w-screen max-w-7xl mx-auto overflow-hidden px-10">
    <div
      id="blogsTitle"
      class="flex flex-col justify-center items-center gap-4 mt-10"
    >
      <Title
        titlePrimary="our blog "
        titleSecondary="posts & articles"
        titleBreak
        titleColor
        desc="Stay informed and learn how to take your game to the next level while keeping your audience engaged."
        layout="right"
      />
    </div>

    <div
      id="blogsContainer"
      class="flex flex-col justify-center items-center gap-4 my-10"
    >
      {
        BLOG_ITEMS.map(({ id, data }, index) => {
          return (
            <Item
              id={id}
              slug={data.slug}
              img={data.img.url}
              title={data.title}
              desc={data.desc}
              category={data.tag}
              date={data.pubDate}
              imgperson={data.author.img.url}
              nameperson={data.author.name}
              align={index % 2 == 0 ? "left" : "right"}
            />
          );
        })
      }
    </div>
  </div>
</section>

<script>
  import { gsap } from "gsap";

  import { ScrollTrigger } from "gsap/ScrollTrigger";

  gsap.registerPlugin(ScrollTrigger);

  gsap.fromTo(
    "#blogsTitle",
    {
      x: -100,
      opacity: 0,
    },
    {
      scrollTrigger: {
        trigger: "#blogsTitle",
        start: "top center",
        end: "bottom center",
        toggleActions: "play none none none",
      },
      x: 0,
      opacity: 100,
      duration: 2,
    }
  );

  gsap.utils
    .toArray<HTMLElement>("#blogsContainer > a")
    .forEach((project, index) => {
      gsap.fromTo(
        project,
        {
          opacity: 0,
          x: 100 * (index % 2 == 0 ? -1 : 1),
        },
        {
          scrollTrigger: {
            trigger: "#blogsContainer",
            start: "top center",
            end: "bottom center",
            toggleActions: "play none none none",
          },
          x: 0,
          opacity: 100,
          duration: 1.5,
          delay: 0.3 * (index + 1),
        }
      );
    });
</script>
