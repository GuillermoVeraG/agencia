---
import ArrowRight from "@/components/icons/ArrowRight.astro";
import type {blogItemBody, blogItemList} from "@/content/schemas";

const { body } = Astro.props;
---

<div>
{
    body.map(({ title, parrafo, border, list, img }:blogItemBody) => 
    {
        const borderCls = border ? "border-l-4 border-brand-500 dark:border-brand_cyan pl-2" : "";
        const imgOnly = img && title == '' && !parrafo && !list;
        const imgH = img && img.height ? img.height : 'h-80';
        const imgWidth = (imgOnly ? "w-full " : "w-full md:w-1/2 ") + imgH;
        const isImg = img ? "w-full md:w-1/2" : "w-full";
        const align = img?.align == "left" ? "md:flex-row" : "md:flex-row-reverse";

        return (
            <div class={`flex flex-col ${align} items-start justify-between gap-10 mt-4`}>
                {img && <img  src={img.src} alt="image blog content" class={`${imgWidth} object-cover`}/>}
                {!imgOnly && <div class={`flex flex-col gap-3 ${borderCls} ${isImg}`}>
                    {title && (<h3 class="text-black dark:text-white uppercase text-4xl font-medium"></h3class>{title}</h3>)}
                    {parrafo  && parrafo.map((txt:string) => <p class="text-gray-700 dark:text-gray-300 text-base">{txt}</p>)}
                    {list && (
                        <ul class="pl-8 flex flex-col gap-4 mb-4">
                        {list.map((item:blogItemList) => (
                            <li class="text-gray-700 dark:text-gray-300 text-base">
                                <ArrowRight className="stroke-brand-500 dark:stroke-brand_cyan inline mb-1"></ArrowRight> 
                                <span class="font-semibold text-black dark:text-white">{item.title}</span>
                                <span set:html={item.txt}></span>
                            </li>)
                        )}
                        </ul>
                    )}</div>
                }</div>
        )
    })
}
</div>